name: SolidityScan Frontend Image Build Workflow

on:
  workflow_dispatch:
    inputs:
      ENV:
        description: "Build environment"
        required: true
        default: "stage"
        type: choice
        options:
          - stage
          - prod
          - backoffice-stage
          - backoffice-prod

jobs:
  build:
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      ENV: ${{ inputs.ENV }}
      DOCKER_COMPOSE_PATH: /home/runner/work/solidity-scanner-frontend/solidity-scanner-frontend/docker-compose.yml
      PROJECT_DIRECTORY: /home/runner/work/solidity-scanner-frontend/solidity-scanner-frontend/
    runs-on: ubuntu-latest
    permissions: read-all

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: sonarsource/sonarqube-scan-action@master

      # - name: Setting aws credentials
      #   uses: aws-actions/configure-aws-credentials@v3
      #   with:
      #     aws-region: us-east-2
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Cloning files from S3
      #   run: |
      #     if [[ "${{ inputs.ENV }}" == "stage" ]]; then
      #       aws s3 cp s3://credshields-dev/env_file/frontend.env ${PROJECT_DIRECTORY}/.env
      #       aws s3 cp s3://credshields-dev/new-relic/newrelic-browser.js ${PROJECT_DIRECTORY}/
      #     elif [[ "${{ inputs.ENV }}" == "prod" ]]; then
      #       aws s3 cp s3://credshields-prod/env_file/frontend.env ${PROJECT_DIRECTORY}/.env
      #       aws s3 cp s3://credshields-prod/new-relic/newrelic-browser.js ${PROJECT_DIRECTORY}/
      #     elif [[ "${{ inputs.ENV }}" == "backoffice-stage" ]]; then
      #       aws s3 cp s3://credshields-dev/env_file/frontend_backoffice.env ${PROJECT_DIRECTORY}/.env
      #     elif [[ "${{ inputs.ENV }}" == "backoffice-prod" ]]; then
      #       aws s3 cp s3://credshields-prod/env_file/frontend_backoffice.env ${PROJECT_DIRECTORY}/.env

      #     fi

      # - name: Logging in on aws ecr
      #   run: aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 132830644905.dkr.ecr.us-east-2.amazonaws.com

      # - name: Build the Docker image
      #   run: |
      #     docker compose -f ${DOCKER_COMPOSE_PATH} build --no-cache
      # - name: Pusing created images to ECR
      #   run: docker compose -f ${DOCKER_COMPOSE_PATH} push
